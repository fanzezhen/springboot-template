buildscript {
    repositories {
        mavenLocal()    //使用本地maven仓库
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }    // 阿里云Maven镜像
        mavenCentral()     //使用maven中心仓库
        // maven { url "${repositoryUrl}/repository/maven-public/" }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

jar {
    enabled = false
}

allprojects {
    bootJar {
        enabled = false  // 默认不需要打可执行jar包
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'jacoco'
    apply plugin: 'application'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    group = 'com.github.fanzezhen.template'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '11'
    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
    jar {
        enabled = true
    }
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
    }

    dependencies {
        testCompile('org.springframework.boot:spring-boot-starter-test:' + project.springBootVersion)
    }
}
